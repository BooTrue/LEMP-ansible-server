---
- hosts: all
  become: true
  vars:
      php_version: '7.4'
  vars_files:
    - "vars/default.yml"
  roles:
      - install_php
  tasks:
    
    # Create user
    - name: Create user for OS
      user:
        name: "{{ web_user }}"
        password: "{{ web_user_password | password_hash('sha512')}}"
        shell: /bin/bash
        state: present

    # Creates directorys
    - name: Create a directory {{ domain_name }} in "sites" if it does not exist
      file:
        path: "{{ path_project }}"
        state: directory
        owner: "{{ web_user }}"
        group: "{{ web_user }}"
        mode: '0755'

    - name: Create a directory {{ domain_name }} in "shared" if it does not exist
      file:
        path: "{{ path_shared_project }}"
        state: directory
        owner: "{{ web_user }}"
        group: "{{ web_user }}"
        mode: '0755'

    # Install Nginx
    - name: Install nginx
      apt: 
        name: nginx
        state: latest

    - name: Start nginx
      service:
        name: nginx
        state: started

    - name: Template the nginx config file and restart nginx
      template:
        src: "{{nginx_config}}"
        dest: /etc/nginx/sites-available/{{ domain_name }}

    - name: Create symlink
      file:
        src: /etc/nginx/sites-available/{{ domain_name }}
        dest: /etc/nginx/sites-enabled/{{ domain_name }}
        state: link

    - name: Change web user  for server
      ansible.builtin.replace:
        path: /etc/nginx/nginx.conf
        regexp: 'user www-data;'
        replace: 'user web;'
    
    - name: Restart nginx
      service:
        name: nginx
        state: restarted

    # Install Utility software
    - name: Install PIP
      apt: 
        name: python3-pip
        state: latest

    - name: Install PyMysql
      pip:
        name: pymysql
        state: present

    # Install MariaDB
    - name: Install MariaDB
      apt: 
        name: mariadb-server 
        state: latest 
        update_cache: yes

    - name: Start MariaDB
      service:
        name: mysql
        state: started

    # Setting mysql_secure_installation
    - name: Setting mysql_secure_installation
      command: echo "{{ mysql_root_password }}\n n\n n\n y\n y\n y\n y\n" | sudo mysql_secure_installation
    
    # Setting database
    - name: Create database
      mysql_db:
        login_user: root
        login_password: "{{ mysql_root_password }}"
        login_unix_socket: /run/mysqld/mysqld.sock
        name: "{{ mysql_name_db }}"
        state: present
    
    - name: Create user for database
      mysql_user: 
        login_user: root
        login_password: "{{ mysql_root_password }}"
        login_unix_socket: /run/mysqld/mysqld.sock
        name: "{{ mysql_name_user }}"
        password: "{{ mysql_password_user }}"
        host: localhost
        priv: "{{ mysql_name_db }}.*:ALL"
        state: present

    # Install PHP
    - name: Install PHP modules
      apt:
        name: "{{ php_packages }}"
      notify: "reload php{{ php_version }}-fpm"

    # Config php.ini and user config
    - name: Copy bitrix.ini
      copy:
        src: "{{ php_ini }}"
        dest: /etc/php/7.4/mods-available

    - name: Copy web.conf
      copy:
        src: "{{ php_conf }}"
        dest: /etc/php/7.4/fpm/pool.d

    - name: Renamed www.conf to www.conf_default
      command: mv /etc/php/7.4/fpm/pool.d/www.conf /etc/php/7.4/fpm/pool.d/www.conf_default

    - name: Create symlink for bitrix.ini in fpm
      file:
        src: /etc/php/7.4/mods-available/bitrix.ini
        dest: /etc/php/7.4/fpm/conf.d/50-bitrix.ini
        state: link

    - name: Create symlink for bitrix.ini in cli
      file:
        src: /etc/php/7.4/mods-available/bitrix.ini
        dest: /etc/php/7.4/cli/conf.d/50-bitrix.ini
        state: link

    - name: Restart service php-fpm
      service:
        name: php7.4-fpm
        state: restarted